image: atlassian/default-image:4

definitions:
  caches:
    maven: ~/.m2
    node: ~/.npm

pipelines:
  default:
    - step:
        name: Detectar e Autopack com CLI
        caches:
          - maven
          - node
        artifacts:
          - artifacts/**
        script:
          - echo "üîç Detectando linguagem e empacotando artefato..."
          - apt-get update && apt-get install -y unzip zip openjdk-17-jre curl maven
          - export BUILD_ID="${BITBUCKET_BUILD_NUMBER}"
          - export PROJECT_VERACODE="${PROJECT_VERACODE:-$BITBUCKET_REPO_SLUG}"
          - mkdir -p artifacts/$BUILD_ID
          - export VERACODE_WRAPPER_VERSION="24.7.14.0"

          - |
            if [ -f "pom.xml" ]; then
              echo "‚úîÔ∏è Projeto Java Maven"
              mvn clean package -DskipTests
              export ARTIFACT=$(find target -type f \( -name "*.jar" -o -name "*.war" \) | head -n1)
              cp "$ARTIFACT" "artifacts/$BUILD_ID/"
              zip -j artifacts/$BUILD_ID/analysisPack.zip "$ARTIFACT"
            else
              echo "üì¶ Projeto n√£o-Maven ‚Äî usando AutoPack"
              curl -fsS https://tools.veracode.com/veracode-cli/install | sh
              ./veracode package --source . --output artifacts/$BUILD_ID --trust
              unzip -o artifacts/$BUILD_ID/*.zip -d artifacts/$BUILD_ID/analysisPack || true
              rm -f artifacts/$BUILD_ID/*.zip
              zip -r artifacts/$BUILD_ID/analysisPack.zip artifacts/$BUILD_ID/analysisPack
            fi

    - step:
        name: üî¨ Veracode SAST (Wrapper)
        deployment: test
        artifacts:
          - artifacts/**
        script:
          - export BUILD_ID="${BITBUCKET_BUILD_NUMBER}"
          - export PROJECT_VERACODE="${PROJECT_VERACODE:-$BITBUCKET_REPO_SLUG}"
          - export VERACODE_WRAPPER_VERSION="24.7.14.0"

          - echo "üöÄ Iniciando Veracode SAST com Wrapper"
          - wget https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/$VERACODE_WRAPPER_VERSION/vosp-api-wrappers-java-$VERACODE_WRAPPER_VERSION.jar -O veracodeJavaAPI.jar
          - |
              if [ -f "veracodeJavaAPI.jar" ]; then
                echo "‚úÖ Wrapper SAST baixado com sucesso."
              else
                echo "‚ùå Wrapper SAST n√£o foi baixado corretamente. Abortando."
                exit 1
              fi
          - |
              java -jar veracodeJavaAPI.jar \
                -vid "${APIID_VERACODE}" \
                -vkey "${APIKEY_VERACODE}" \
                -action UploadAndScan \
                -appname "${PROJECT_VERACODE}" \
                -version "Build ${BUILD_ID}" \
                -filepath artifacts/$BUILD_ID/analysisPack.zip \
                -createprofile true \
                -autoscan true \
                -deleteincompletescan 2

    - parallel:
        - step:
            name: üõ°Ô∏è Veracode Pipeline Scan
            artifacts:
              - artifacts/**
            script:
              - export BUILD_ID="${BITBUCKET_BUILD_NUMBER}"
              - export PROJECT_VERACODE="${PROJECT_VERACODE:-$BITBUCKET_REPO_SLUG}"
              - echo "üî¨ Iniciando Pipeline Scan"
              - curl -O -L https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
              - unzip -o pipeline-scan-LATEST.zip
              - |
                  java -jar pipeline-scan.jar \
                    -vid "${APIID_VERACODE}" \
                    -vkey "${APIKEY_VERACODE}" \
                    -f artifacts/$BUILD_ID/analysisPack.zip \
                    --fail_on_severity="Very High, High, Medium, Low, Very Low" \
                    --issue_details true

        - step:
            name: Veracode SCA Agent-Based
            artifacts:
              - artifacts/**
            script:
              - echo "üî¨ Executando Veracode SCA Agent-Based"
              - curl -sSL https://download.sourceclear.com/ci.sh | sh
