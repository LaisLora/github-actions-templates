name: Build

on:
  workflow_call:
    inputs:
      project-path:
        description: 'Caminho do projeto'
        required: true
        type: string

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      is_php: ${{ steps.detect.outputs.is_php }}
      is_python: ${{ steps.detect.outputs.is_python }}
      is_node: ${{ steps.detect.outputs.is_node }}
      is_java: ${{ steps.detect.outputs.is_java }}
      is_dotnet: ${{ steps.detect.outputs.is_dotnet }}
    steps:
      - uses: actions/checkout@v4
      - name: Mudar para o diretório do projeto
        run: cd ${{ inputs.project-path }}
      - name: Detectar linguagens
        id: detect
        run: |
          if [ -f composer.json ]; then echo "is_php=true" >> $GITHUB_OUTPUT; else echo "is_php=false" >> $GITHUB_OUTPUT; fi
          if [ -f requirements.txt ]; then echo "is_python=true" >> $GITHUB_OUTPUT; else echo "is_python=false" >> $GITHUB_OUTPUT; fi
          if [ -f package.json ]; then echo "is_node=true" >> $GITHUB_OUTPUT; else echo "is_node=false" >> $GITHUB_OUTPUT; fi
          if [ -f pom.xml ]; then echo "is_java=true" >> $GITHUB_OUTPUT; else echo "is_java=false" >> $GITHUB_OUTPUT; fi
          if ls *.csproj 1> /dev/null 2>&1; then echo "is_dotnet=true" >> $GITHUB_OUTPUT; else echo "is_dotnet=false" >> $GITHUB_OUTPUT; fi

  build_php:
    needs: detect
    if: ${{ needs.detect.outputs.is_php == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Mudar para o diretório do projeto
        run: cd ${{ inputs.project-path }}
      - name: Validar composer.json e composer.lock
        run: composer validate --strict
      - name: Cache dos pacotes do Composer
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Instalar dependências
        run: composer install --prefer-dist --no-progress
      # Para rodar testes, adicione um script "test" no composer.json e descomente:
      # - name: Executar testes
      #   run: composer run-script test

  build_python:
    needs: detect
    if: ${{ needs.detect.outputs.is_python == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Mudar para o diretório do projeto
        run: cd ${{ inputs.project-path }}
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Atualizar pip e instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint com flake8
        run: |
          pip install flake8
          flake8 .
      - name: Executar testes com pytest
        run: |
          pip install pytest
          pytest

  build_node:
    needs: detect
    if: ${{ needs.detect.outputs.is_node == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Mudar para o diretório do projeto
        run: cd ${{ inputs.project-path }}
      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Instalar dependências
        run: npm install
      - name: Rodar lint (se configurado)
        run: npm run lint
      - name: Executar testes
        run: npm test

  build_java:
    needs: detect
    if: ${{ needs.detect.outputs.is_java == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Mudar para o diretório do projeto
        run: cd ${{ inputs.project-path }}
      - name: Detectar projeto Java-Maven
        id: check_maven
        run: |
          if [ -f "pom.xml" ]; then
            echo "java_maven=true" >> $GITHUB_OUTPUT
          else
            echo "java_maven=false" >> $GITHUB_OUTPUT
          fi
      - name: Detectar versão do Java no pom.xml
        if: ${{ steps.check_maven.outputs.java_maven == 'true' }}
        id: detect_java
        run: |
          JAVA_VERSION=$(grep -oPm1 "(?<=<maven.compiler.source>)[^<]+" pom.xml || echo "11")
          if [[ "$JAVA_VERSION" == "11" ]]; then
            JAVA_VERSION=$(grep -oPm1 "(?<=<java.version>)[^<]+" pom.xml || echo "11")
          fi
          echo "Versão do Java detectada: $JAVA_VERSION"
          echo "java_version=$JAVA_VERSION" >> $GITHUB_OUTPUT
      - name: Configurar JDK e Maven
        if: ${{ steps.check_maven.outputs.java_maven == 'true' }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ steps.detect_java.outputs.java_version }}
          distribution: temurin
          cache: maven
      - name: Compilar projeto Maven
        if: ${{ steps.check_maven.outputs.java_maven == 'true' }}
        run: mvn clean package

  build_dotnet:
    needs: detect
    if: ${{ needs.detect.outputs.is_dotnet == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Mudar para o diretório do projeto
        run: cd ${{ inputs.project-path }}
      - name: Configurar .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Restaurar dependências
        run: dotnet restore
      - name: Compilar solução
        run: dotnet build --configuration Release --no-restore
      - name: Executar testes
        run: dotnet test --no-build --verbosity normal
