# =====================================================================
# Veracode DevSecOps Workflow - Fluxo Ilustrativo
# =====================================================================
#
#                          FLUXO DO PIPELINE
#
#  Start
#    │
#    ├──> Checkout do Código
#    │       └──→ Veracode SCA (paralelo)
#    │
#    ├──> Preparar Ambiente
#    │
#    ├──> Verificação de Governança
#    │
#    ├──> Compilar Projeto (se necessário conforme linguagem)
#    │
#    ├──> Testes Appsec
#    │       ├──→ Pipeline Scan
#    |       ├──→ Quality Gate
#    │       ├──→ SAST 
#    │       └──→ Envio Issues
#    │
#    ├──> Sistema de regra ou testes QA (ilustrativo)
#    │
#    ├──> Ofuscar JavaScript (ilustrativo)
#    │
#    ├──> Publicar artefato (ilustrativo)
#    └──> Deploy (ilustrativo)
#
# =====================================================================

name: Veracode DevSecOps 

on:
  workflow_call:
  
    inputs:
      # Variaveis que os projetos podem sobrescrever
      environment:
        description: 'Ambiente de execução do build'
        required: true
        type: string
      project:
        description: 'Nome do projeto'
        required: true
        type: string
       
env:
  PROJECT: ${{ inputs.project_veracode }}
  ENVIRONMENT: ${{ inputs.environment }}

jobs:
  # ─── Job de Checkout ───────────────────────────────────────────────────────
  checkout:
    name: 📥 Checkout do Código
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

  # ─── Job que chama o template Veracode ─────────────────────────────────────
  veracode:
    name: 🛡️ Executar Veracode SCA/SAST
    needs: checkout
    uses: LaisLora/github-actions-templates/.github/workflows/veracode-template.yml@main
    secrets: inherit
    with:
      build-id: ${{ inputs.build-id }}
      environment: ${{ inputs.environment }}
      project_veracode: ${{ inputs.project }}
      
