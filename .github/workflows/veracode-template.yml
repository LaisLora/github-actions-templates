name: Veracode Analysis

on:
  workflow_call: # Permite ser chamado ap√≥s o build
    inputs:
      build-id:
        required: true
        type: string

jobs:
  environment-check:
    runs-on: ubuntu-22.04
    steps:
      - name: Verificar Ambiente
        run: |
          echo "üõ†Ô∏è Verificando ambiente..."
          uname -a
          echo "‚úÖ Ambiente pronto."
        
  autopack:
    needs: environment-check
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Baixar e Instalar CLI do Veracode
        run: |
          echo "üì• Baixando e instalando o CLI do Veracode..."
          curl -fsS https://tools.veracode.com/veracode-cli/install | sh

      - name: Empacotar Artefatos com o CLI do Veracode
        run: |
        
          BUILD_ID="${{ inputs.build-id }}"

          # Diret√≥rio-base do reposit√≥rio
          REPO_DIR="${{ github.workspace }}"

          # Diret√≥rio final de artefatos, contendo o build-id
          OUTPUT_DIR="$REPO_DIR/artifacts/${BUILD_ID}"
          
          # Caminho do ZIP final
          FINAL_ZIP="$OUTPUT_DIR/analysisPack.zip"
          
          # Criar o diret√≥rio de artefatos (com subpasta do build-id)
          mkdir -p "$OUTPUT_DIR"
          echo "üìÇ Diret√≥rio de artefatos definido como: $OUTPUT_DIR"
          
          # Empacotar com o CLI do Veracode
          echo "üì¶ Empacotando artefatos do diret√≥rio $REPO_DIR..."
          ./veracode package --source "$REPO_DIR" --output "$OUTPUT_DIR" --trust
          
          # Descompactar qualquer .zip intermedi√°rio que o CLI possa ter gerado
          find "$OUTPUT_DIR" -name "*.zip" | while read filename; do
            echo "Descompactando $filename..."
            unzip -o "$filename" -d "$(dirname "$filename")"
          done
          
          # Remover os zips intermedi√°rios (se houver)
          rm -rf "$OUTPUT_DIR"/*.zip 
          
          # Consolidar todos os arquivos em um √∫nico ZIP
          echo "üìÇ Consolidando artefatos em um √∫nico arquivo ZIP: $FINAL_ZIP..."
          cd "$OUTPUT_DIR"
          zip -r "$FINAL_ZIP" ./*
          
          # Validar se o arquivo final existe e n√£o est√° vazio
          if [ ! -f "$FINAL_ZIP" ] || [ ! -s "$FINAL_ZIP" ]; then
            echo "‚ùå Arquivo inv√°lido ou vazio: $FINAL_ZIP. Abortando."
            exit 1
          fi

          echo "‚úÖ Pacote consolidado gerado com sucesso: $FINAL_ZIP"

      - name: Publicar Artefato
        uses: actions/upload-artifact@v3
        with:
          # Mesmo nome que ser√° baixado nos outros jobs
          name: analysisPack
          path: ${{ github.workspace }}/artifacts/analysisPack.zip

  Veracode_SCA:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Veracode SCA
        env:
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }} 
        run: |
          curl -sSL 'https://download.sourceclear.com/ci.sh' | bash -s ‚Äì scan --update-advisor --pull-request --allow-dirty
  
  veracode-sast-pipeline_scan:
    needs: autopack
    runs-on: ubuntu-latest
    name: veracode pipeline scan

    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      
      - name: get archive
        uses: actions/download-artifact@v3
        with:
          name: analysisPack  # Mesmo nome do artifact publicado
          path: .  # Baixa para o diret√≥rio atual

      - name: veracode pipeline-scan
        id: pipeline-scan
        uses: veracode/Veracode-pipeline-scan-action@v1.0.15
        with:
          vid: ${{ secrets.VERACODE_API_ID }}
          vkey: ${{ secrets.VERACODE_API_KEY }}
          file: './analysisPack.zip'  # Arquivo que baixamos

  veracode-sast-policy-scan:
    needs: [ autopack, veracode-sast-pipeline_scan ]
    runs-on: ubuntu-22.04
    steps:
      - name: Baixar Artefato
        uses: actions/download-artifact@v3
        with:
          name: analysisPack
          path: .  # Baixa novamente no diret√≥rio atual

      - name: Veracode SAST Policy Scan
        uses: veracode/veracode-uploadandscan-action@0.2.6
        with:
          appname: ${{ github.repository }}
          createprofile: true
          filepath: './analysisPack.zip'
          vid: ${{ secrets.VERACODE_API_ID }}
          vkey: ${{ secrets.VERACODE_API_KEY }}
          version: "${{ github.run_id }}"
          scantimeout: 12
